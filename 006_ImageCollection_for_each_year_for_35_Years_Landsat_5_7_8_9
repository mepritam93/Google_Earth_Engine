
// Defining Study Area
var roi = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level2")
  .filter(ee.Filter.eq('ADM1_NAME', 'Goa'));

Map.addLayer(roi, {}, 'Goa', 0);
Map.centerObject (roi);

// Cloud masking and scaling function
function maskLandsat(image) {
  var cloudshadowbitmask = (1 << 3);
  var cloudsbitmask = (1 << 4);
  var qa = image.select('QA_PIXEL');
  var qaMask = qa.bitwiseAnd(cloudshadowbitmask).lte(2).and(qa.bitwiseAnd(cloudsbitmask).lte(2));
  var saturationMask = image.select('QA_RADSAT').lte(2);

  var opticalBands = image.select('B', 'G', 'R', 'NIR', 'SWIR1', 'SWIR2').multiply(0.0000275).add(-0.2);
  return image.addBands(opticalBands, null, true)
    .updateMask(qaMask)
    .updateMask(saturationMask);
}

// Function to apply focal mean to an image and preserve the metadata
function applyFocalMean(image) {
    // Apply focal mean with a kernel size of 5x5 pixels
    var smoothedImage = image.focal_mean(5, 'square', 'pixels').blend(image);
    
    // Copy relevant properties from the original image to the smoothed image
    return smoothedImage.copyProperties(image, image.propertyNames());
}

// Function to calculate yearly mean composite
function calculateYearlyMean(year) {
  var yearStart = ee.Date.fromYMD(year, 1, 1);
  var yearEnd = yearStart.advance(1, 'year');

  var l5 = ee.ImageCollection('LANDSAT/LT05/C02/T1_L2')
    .filterDate(yearStart, yearEnd)
    .filterBounds(roi)
    .select(['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7', 'QA_PIXEL', 'QA_RADSAT'], ['B', 'G', 'R', 'NIR', 'SWIR1', 'SWIR2', 'QA_PIXEL', 'QA_RADSAT'])
    .map(maskLandsat);

  var l7 = ee.ImageCollection('LANDSAT/LE07/C02/T1_L2')
    .filterDate(yearStart, yearEnd)
    .filterBounds(roi)
    .select(['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7', 'QA_PIXEL', 'QA_RADSAT'], ['B', 'G', 'R', 'NIR', 'SWIR1', 'SWIR2', 'QA_PIXEL', 'QA_RADSAT'])
    .map(maskLandsat)
    .map(applyFocalMean);

  var l8 = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
    .filterDate(yearStart, yearEnd)
    .filterBounds(roi)
    .select(['SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B6', 'SR_B7', 'QA_PIXEL', 'QA_RADSAT'], ['B', 'G', 'R', 'NIR', 'SWIR1', 'SWIR2', 'QA_PIXEL', 'QA_RADSAT'])
    .map(maskLandsat);
  var l9 = ee.ImageCollection('LANDSAT/LC09/C02/T1_L2')
      .filterDate(yearStart, yearEnd)
      .filterBounds(roi)
      .select(['SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B6', 'SR_B7', 'QA_PIXEL', 'QA_RADSAT'], ['B', 'G', 'R', 'NIR', 'SWIR1', 'SWIR2', 'QA_PIXEL', 'QA_RADSAT'])
      .map(maskLandsat);
  
  var combined = l5.merge(l7).merge(l8).merge(l9);
  var meanImage = combined.median();

  print('Year:', year, 'Collection Size:', combined.size()); // Check collection size
  return meanImage.set('year', year).clip(roi);
}

// Function to add map layers for a range of years
function addYearlyLayers(startYear, endYear) {
  for (var year = startYear; year <= endYear; year++) {
    var yearlyImage = calculateYearlyMean(year);
    var visParamsYear = { min: -0.2, max: 0.1, bands: ['R', 'G', 'B'] };
    Map.addLayer(yearlyImage, visParamsYear, 'Year ' + year);
  }
}

// Define start and end years
var startYear = 1990;
var endYear = 2024;

// Add map layers for the specified years
addYearlyLayers(startYear, endYear);

// Export a single year's image (e.g., 2024)
var exportYear = 2024;
var exportImage = calculateYearlyMean(exportYear);

Export.image.toDrive({
  image: exportImage,
  description: 'Landsat_Year_' + exportYear,
  scale: 30, // Adjust scale as needed
  region: roi,
  maxPixels: 1e13, // Adjust maxPixels as needed
  fileFormat: 'GeoTIFF' // Choose file format
});
